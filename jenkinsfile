pipeline {
    agent any
    environment {
        AWS_ACCESS_KEY_ID = credentials('aws_access_key_id') 
        AWS_SECRET_ACCESS_KEY = credentials('aws_secret_access_key') 
        AWS_SESSION_TOKEN = credentials('aws_session_token') 
    }
    stages {
        stage('Create Infrastructure') {
            steps {
                script {
                    sh 'terraform init'
                    sh 'terraform apply -auto-approve'
                }
            }
        }
        stage('Ansible Code') {
            steps {
                script {
                    // Get EC2 public IP from Terraform output
                    def ec2_ip = sh(script: "terraform output -raw ec2_public_ip", returnStdout: true).trim()
                    
                    // Check if IP address is valid
                    if (ec2_ip) {
                        // Write the IP to the Ansible inventory
                        writeFile file: 'inventory', text: "[web]\n${ec2_ip} ansible_user=ec2-user ansible_ssh_private_key_file=/ayakey.pem"
                        
                        // Print inventory file for debugging
                        echo "Inventory file content:\n"
                        sh 'cat inventory'
                        
                        // Run Ansible playbook
                        sh 'ansible-playbook -i inventory nginx.yml'
                    } else {
                        error "Failed to retrieve EC2 public IP"
                    }
                }
            }
        }
    }
    post {
        always {
            // Clean up inventory file
            sh 'rm -f inventory'
        }
    }
}
